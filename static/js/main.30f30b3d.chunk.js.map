{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/Addtask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","Addtask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddtask","setshowAddtask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30f30b3d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n    return (\r\n        <button onClick={onClick} style = {{backgroundColor: color}} className = 'btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color : 'royalBlue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text : PropTypes.string,\r\n    color : PropTypes.string,\r\n    onClick : PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({title,onAdd,showAdd}) => {\r\n    return (\r\n        <header className = 'header'>\r\n            <h1>{title}</h1>\r\n            <Button \r\n            color = 'green' \r\n            text = {showAdd ? 'Close' : 'Add'}\r\n            onClick = {onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Schedule',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className = {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes \r\n                style = {{\r\n                    color: 'red', \r\n                    cursor: 'pointer',\r\n                }} \r\n                onClick = {() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n          {tasks.map((task,index) => (\r\n              <Task \r\n              key = {index} \r\n              task = {task} \r\n              onDelete = {onDelete}\r\n              onToggle = {onToggle} />\r\n          ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nconst Addtask = ({onAdd}) => {\r\n    const [text,setText] = useState('')    \r\n    const [day,setDay] = useState('')    \r\n    const [reminder,setReminder] = useState('false')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert(\"Please add a task!\");\r\n        }\r\n\r\n        onAdd({ text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(true)\r\n    }\r\n\r\n    return (\r\n        <form className = 'form' onSubmit = {onSubmit}>\r\n            <div className = 'form-control'>\r\n                <label>Schedule:</label>\r\n                <input \r\n                type = \"text\" \r\n                placeholder = \"Add Task\"\r\n                value = {text}\r\n                onChange = {(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className = 'form-control'>\r\n                <label>Day and Time:</label>\r\n                <input \r\n                type = \"text\" \r\n                placeholder = \"Set day and time\"\r\n                value = {day}\r\n                onChange = {(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className = 'form-control form-control-check'>\r\n                <label>Set Reminder:</label>\r\n                <input \r\n                type = \"checkbox\"\r\n                checked = {reminder}\r\n                value = {reminder}\r\n                onChange = {(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type = \"submit\" value = \"Save Task\" className = \"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Addtask\r\n","import { useState} from \"react\"\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport Addtask from \"./components/Addtask\"\n\n\nconst App = () => {\n  const [showAddtask,setshowAddtask] = useState (false)\n  const [tasks,setTasks] = useState ([])\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random()*1000) + 1 \n    const newTask = {id, ...task}\n    setTasks([...tasks,newTask])\n  }\n\n  const deleteTask = (id) => {\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd = {() => setshowAddtask(!showAddtask)} showAdd = {showAddtask}/>\n      {\n      (showAddtask) ? <Addtask onAdd = {addTask}/> : ''\n      }\n      {\n      tasks.length > 0 ? (<Tasks tasks = {tasks} onDelete = {deleteTask} onToggle = {toggleReminder}/>) : ('There is nothing on your schedule!')\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}